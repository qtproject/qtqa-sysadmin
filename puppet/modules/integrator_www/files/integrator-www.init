#!/bin/bash

# Init script for integrator-www
# Copied from http://wiki.catalystframework.org/wiki/deployment/lighttpd_fastcgi and modified!
# chkconfig: - 85 15
# description: Qt CI System web app


APP_NAME=qt_integrator
APP_USER=qtintegration
APP_PATH=/home/$APP_USER/qa-dungeon/ci/www/Qt-Integrator
DB_PATH=/home/$APP_USER/ci/ci_results.db
FCGI_SOCKET=/var/run/lighttpd/integrator-www-fastcgi.socket
PID_PATH=/var/run/$APP_NAME.pid
LOG_FILE="$APP_PATH"/log/err.log
NPROC=5

. /etc/rc.d/init.d/functions

case $1 in
start)
    if [ -r "$PID_PATH" ] && kill -0 $(cat "$PID_PATH") >/dev/null 2>&1
    then
        echo " $APP_NAME already running"
        exit 0
    fi

    echo -n "Starting $APP_NAME (${APP_NAME}_fastcgi.pl)..."

    ln -sf "$DB_PATH" "$APP_PATH/db/ci_results.db"

    touch "$PID_PATH"
    chown "$APP_USER" "$PID_PATH"

    cd "$APP_PATH"
    mkdir -p "$(dirname $LOG_FILE)"
    su -c "\"script/${APP_NAME}_fastcgi.pl\"\\
       --listen $FCGI_SOCKET\\
       --pidfile \"$PID_PATH\"\\
       --nproc $NPROC\\
       --keeperr\\
       --daemon" "$APP_USER" 2>>"$LOG_FILE"

    # Wait for the app to start  
    TIMEOUT=10; while [ ! -r "$PID_PATH" ] && ! kill -0 $(cat "$PID_PATH")
    do
        echo -n '.'; sleep 1; TIMEOUT=$[$TIMEOUT - 1]
        if [ $TIMEOUT = 0 ]; then
            echo " ERROR: TIMED OUT"; exit 0
        fi
    done
    echo " started."
    ;;

stop)
    echo -n "Stopping $APP_NAME: "
    if [ -r "$PID_PATH" ] && kill -0 $(cat "$PID_PATH") >/dev/null 2>&1
    then
        PID=`cat $PID_PATH`
        echo -n "killing $PID... "; kill $PID
        echo -n "OK. Waiting for the FastCGI server to release the
        port..."
        TIMEOUT=60
        while netstat -tnl | grep -q $FCGI_SOCKET; do
            echo -n "."; sleep 1; TIMEOUT=$[$TIMEOUT - 1]
            if [ $TIMEOUT = 0 ]; then
                echo " ERROR: TIMED OUT"; exit 0
            fi
        done
        echo " OK."
    else
        echo "$APP_NAME not running."
    fi
    ;;

restart|force-reload)
    $0 stop
    echo -n "A necessary sleep... "; sleep 2; echo "done."
    $0 start
    ;;

status)
    status -p "$PID_PATH" ${APP_NAME}_fastcgi.pl
    RETVAL=$?
    ;;
*)
    echo "Usage: $0 { stop | start | restart }"
    exit 1
    ;;
esac

